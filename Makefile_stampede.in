##
##  This file is part of lesgo.
##
##  lesgo is free software: you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##
##  lesgo is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with lesgo.  If not, see <http://www.gnu.org/licenses/>.
##

# This is the settings makefile.
# Use with GNU make.
# Relies on makedepf90 to do dependency lists:
# You can obtain this free program from:
#   http://www.helsinki.fi/~eedelman/makedepf90.html
# New $ARCH entries may be required, depending on your compiler.
# Also requires fpx3 fortran preprocessor available at
#   http://wwwuser.gwdg.de/~jbehren/fpx3.html

SHELL = /bin/bash
FCOMP = ifort
## Top line general. Lines 2,3,4 for Panoramorix.
## Note that the order of the libraries here can make a difference (compilation problems); depends on the compiler
INCLPATH =-I$TACC_FFTW2_INC

#$TACC_FFTW2_INC\
	-I$TACC_IMPI_INC\
	-I$TACC_INTEL_INC


#for intel  -> Using system variables
#LIBPATH =-L$TACC_FFTW2_LIB -ldrfftw -ldfftw \
#	-L$TACC_IMPI_LIB\
#	-L$TACC_INTEL_LIB


#for intel -> Using explicit path

LIBPATH = -L/home1/apps/intel18/impi18_0/fftw2/2.1.5/lib




#for gfortran

#LIBPATH =/home1/apps/gcc7_1/impi18_0/fftw2/2.1.5/lib/libdrfftw.a\
#	-L/opt/intel/mkl/lib/intel64_lin \
#	/home1/apps/gcc7_1/impi18_0/fftw2/2.1.5/lib/libdfftw.a

HOSTNAME = $(shell hostname -s)

# Set either double or single precision
USE_DBLPREC = yes

#--Set global DEBUG flag;
#--Still have to set DEBUG in individual routines
DEBUG=no
#--Set global VERBOSE flag;
VERBOSE=no
#--Sets inclusion of development sections
DEVEL=no
# Set extra safety measures 
USE_SAFETYMODE=yes

# Output additional quantities to file. May be useful
# for diagnosing issues
OUTPUT_EXTRA=no

# Use FFTW3 libraries (if no FFTW2 will be used)
#USE_FFTW3=no

# Enable parallization support (openmp currently not supported)
USE_MPI = yes
USE_OPENMP = no

# Options: DEFAULT, LITTLE, or BIG
WRITE_ENDIAN = DEFAULT

# Read binary files as big_endian or little_endian
# Options: DEFAULT, LITTLE, or BIG
READ_ENDIAN = DEFAULT

# Use binary output for output files
USE_TURBINES=no
USE_BINARY=no
USE_PPCON = yes
USE_PPBUDGET = no

USE_PPSGS = yes
# Use CGNS data output
USE_CGNS=no

#################################################### Tony ATM
# Use the actuator turbine model
USE_ATM = no
#################################################### Tony ATM


USE_LVLSET = no
  USE_RNS_LS = no
  USE_CYL_SKEW_LS = no

# Concurrent precursor simulation 
# Requires configuration of two builds: upstream and downstream
USE_CPS=no

# Shift the domain in the y (spanwise) direction to eliminate
# streaks effects on averaging
USE_STREAKS = no

# Calc Lag-avg timescale w. error autocorrelation
#USE_DYN_TN = no

FPP = /work/07355/tg866546/stampede2/makedep/fpx3

include Makefile.fpp

# Directory for the .o files
OPATH = obj
# Directory for the .mod files, if your compiler generates them
# May want to just make this 'obj' as well
MPATH = mod

# Set the library list
LIBS = $(LIBPATH) -ldrfftw -ldfftw 

ifeq ($(FCOMP),ifort)


  ifeq ($(USE_MPI), yes)
    FC = mpif90
  else
    FC = ifort
  endif

#  LIBS += -ltecryte-intel

  FFLAGS = -O3 -mcmodel=medium -g -debug all -traceback
  #FFLAGS = -O3 -shared intel -heap-arrays
  FPROF = -p
  LDFLAGS = -threads
  MODDIR = -I$(MPATH) -module $(MPATH)
  FFLAGS += $(MODDIR) $(INCLPATH)
#  CYLINDER_SKEW_PRE_LS_FFLAGS = $(FFLAGS) -r8
endif

ifeq ($(FCOMP),gfortran)
  FPP += -DGFORTRAN
  ifeq ($(USE_MPI), yes)
    FC = mpif90
  else
     ifeq ($(HOSTNAME), panoramix)
       FC = gfortran44
     else
       FC = gfortran
     endif
  endif

  ifeq ($(USE_CGNS), yes)
  LIBS += -lcgns -lhdf5
  endif
  ifeq ($(USE_TURBINES), yes)
  LIBS += -ltecryte
  endif
  ifeq ($(USE_CYL_SKEW_LS),yes)
    LIBS += -lcgaml
  endif

  FFLAGS = -O2 -ffast-math -Wall -fbounds-check  -march=native -funroll-loops -mcmodel=large -shared -fPIC
  FDEBUG = -g
  FPROF = -p
  LDFLAGS =
  MODDIR = -I$(MPATH) -J$(MPATH)
  FFLAGS += $(MODDIR) $(INCLPATH)

endif
